{
  "Tooltip": {
    "animation": {
      "type": "\"bottom\" | \"left\" | \"right\" | \"scale\" | \"top\" | \"none\"",
      "defaultValue": "'scale'",
      "description": "The animation of the tooltip.",
      "required": false
    },
    "as": {
      "type": "keyof ReactDOM",
      "description": "The HTML element to render.",
      "required": false
    },
    "boundary": {
      "type": "HTMLElement | \"clippingParents\" | \"scrollParent\"",
      "defaultValue": "'clippingParents'",
      "description": "The boundary area for the popper. Used within the `preventOverflow` modifier.",
      "required": false
    },
    "closeDelay": {
      "type": "number",
      "defaultValue": "0",
      "description": "The delay before hiding the tooltip.",
      "required": false
    },
    "closeOnClick": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If `true`, the tooltip will hide on click.",
      "required": false
    },
    "closeOnEsc": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, the tooltip will hide on pressing Esc key.",
      "required": false
    },
    "closeOnMouseDown": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If `true`, the tooltip will hide while the mouse is down.",
      "required": false
    },
    "closeOnPointerDown": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If `true`, the tooltip will hide while the pointer is down.",
      "required": false
    },
    "closeOnScroll": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If `true`, the tooltip will hide on scroll.",
      "required": false
    },
    "defaultIsOpen": {
      "type": "boolean",
      "deprecated": "Use `defaultOpen` instead.",
      "description": "If `true`, the tooltip will be initially shown.",
      "required": false
    },
    "defaultOpen": {
      "type": "boolean",
      "description": "If `true`, the tooltip will be initially shown.",
      "required": false
    },
    "disabled": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If `true`, the tooltip will be disabled.",
      "required": false
    },
    "duration": {
      "type": "number | MotionLifecycleProps<number>",
      "description": "The animation duration.",
      "required": false
    },
    "eventListeners": {
      "type": "type ONLY_FOR_FORMAT =\n  | boolean\n  | { resize?: boolean | undefined; scroll?: boolean | undefined }",
      "defaultValue": true,
      "description": "If provided, determines whether the popper will reposition itself on `scroll`  and `resize` of the window.",
      "required": false
    },
    "flip": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, the popper will change its placement and flip when it's about to overflow its boundary area.",
      "required": false
    },
    "gutter": {
      "type": "UIValue<number>",
      "defaultValue": "8",
      "description": "The distance or margin between the reference and popper.\nIt is used internally to create an `offset` modifier.",
      "required": false
    },
    "isDisabled": {
      "type": "boolean",
      "defaultValue": false,
      "deprecated": "Use `disabled` instead.",
      "description": "If `true`, the tooltip will be disabled.",
      "required": false
    },
    "isOpen": {
      "type": "boolean",
      "deprecated": "Use `open` instead.",
      "description": "If `true`, the tooltip will be shown.",
      "required": false
    },
    "label": {
      "type": "type ONLY_FOR_FORMAT =\n  | string\n  | number\n  | boolean\n  | ReactElement<any, string | JSXElementConstructor<any>>\n  | Iterable<ReactNode>\n  | ReactPortal",
      "description": "The label of the tooltip.",
      "required": false
    },
    "matchWidth": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If `true`, the popper will match the width of the reference at all times.\nIt's useful for `autocomplete`, `date-picker` and `select` patterns.",
      "required": false
    },
    "modifiers": {
      "type": "Partial<Modifier<string, any>>[]",
      "description": "Array of popper.js modifiers.\nCheck the docs to see the list of possible modifiers you can pass.",
      "required": false,
      "see": "https://popper.js.org/docs/v2/modifiers/"
    },
    "offset": {
      "type": "[number, number]",
      "description": "The main and cross-axis offset to displace popper element from its reference element.",
      "required": false
    },
    "onClose": {
      "type": "() => void",
      "description": "Callback to run when the tooltip hides.",
      "required": false
    },
    "onOpen": {
      "type": "() => void",
      "description": "Callback to run when the tooltip shows.",
      "required": false
    },
    "open": {
      "type": "boolean",
      "description": "If `true`, the tooltip will be shown.",
      "required": false
    },
    "openDelay": {
      "type": "number",
      "defaultValue": "0",
      "description": "The delay before showing the tooltip.",
      "required": false
    },
    "placement": {
      "type": "UIValue<Placement>",
      "defaultValue": "'bottom'",
      "description": "The placement of the popper relative to its reference.",
      "required": false
    },
    "portalProps": {
      "type": "Pick<\n  PortalProps,\n  \"appendToParentPortal\" | \"containerRef\"\n>",
      "description": "Props for portal component.",
      "required": false
    },
    "preventOverflow": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, will prevent the popper from being cut off and ensure it's visible within the boundary area.",
      "required": false
    },
    "strategy": {
      "type": "\"absolute\" | \"fixed\"",
      "defaultValue": "'absolute'",
      "description": "The CSS positioning strategy to use.",
      "required": false
    },
    "withPortal": {
      "type": "boolean",
      "description": "If `true`, the element will be transported to the end of document.body.",
      "required": false
    }
  }
}
